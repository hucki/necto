# ARG TENANT_UUID
# ARG NODE_ENV
# ARG DATABASE_USER
# ARG DATABASE_PW
# ARG DATABASE_NAME
# ARG DATABASE_URL
# ARG ENCRYPTION_KEY
# ARG REDIS_HOST
# ARG SESSION_SECRET
# ARG SESSION_COOKIE_SECURE
# ARG JWT_SECRET
# ARG MAIL_PASSWORD
# ARG MAIL_HOST
# ARG MAIL_USER
# ARG MAIL_PORT
# Pull Docker Hub base image
FROM node:18-alpine
# Set working directory
WORKDIR /usr/app
# ARG TENANT_UUID
# ARG DATABASE_USER
# ARG DATABASE_PW
# ARG DATABASE_NAME
# ARG DATABASE_URL
# ARG ENCRYPTION_KEY
# ARG REDIS_HOST
# ARG SESSION_SECRET
# ARG SESSION_COOKIE_SECURE
# ARG JWT_SECRET
# ARG MAIL_PASSWORD
# ARG MAIL_HOST
# ARG MAIL_USER
# ARG MAIL_PORT
# ENV TENANT_UUID ${TENANT_UUID}
# ENV DATABASE_USER ${DATABASE_USER}
# ENV DATABASE_PW ${DATABASE_PW}
# ENV DATABASE_NAME ${DATABASE_NAME}
# ENV DATABASE_URL ${DATABASE_URL}
# ENV ENCRYPTION_KEY ${ENCRYPTION_KEY}
# ENV REDIS_HOST ${REDIS_HOST}
# ENV SESSION_SECRET ${SESSION_SECRET}
# ENV SESSION_COOKIE_SECURE ${SESSION_COOKIE_SECURE}
# ENV JWT_SECRET ${JWT_SECRET}
# ENV MAIL_PASSWORD ${MAIL_PASSWORD}
# ENV MAIL_HOST ${MAIL_PASSWORD}
# ENV MAIL_USER ${MAIL_USER}
# ENV MAIL_PORT ${MAIL_PORT}
ENV PATH /app/node_modules/.bin:$PATH
# Install app dependencies
COPY package*.json ./
RUN npm ci --silent
# Copy app to container
COPY . .
# Run the "build" script in package.json
RUN npx prisma generate
RUN npm run build
EXPOSE 3001
# CMD ["node", "dist/src/app.js"]